{
  "hash": "8a1c90ef790cd1b4f89bae63035f8e2f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DS.00 - Descriptives\"\ndescription: \"DataSkills 00 Descriptive Statistics\"\nauthor:\n  - name: Gordon Wright\n    role: remixer\n    orcid: 0000-0003-1689-0557\n    email: g.wright@gold.ac.uk\n    affiliations:\n      - name: LittleMonkeyLab @ Goldsmiths Psychology\n        address: Goldsmiths, University of London\n        city: London\n        state: UK\n        postal-code: SE14 6NW\n  - name: Matthew Crump\n    role: Original Author\nwebr:\n  packages: ['ggplot2', 'dplyr', 'knitr', 'magrittr', 'gapminder']\n---\n\n\n\n\n::: callout\nThis placeholder/indicative text is copied (and minimally edited) from\nProfessor Matthew Crump (et al)'s \"Answering Questions with Data\"\n\nOnline Textbook: https://crumplab.github.io/statistics/\n\nCitation: Crump, M. J. C., Navarro, D. J., & Suzuki, J. (2019, June 5).\nAnswering Questions with Data (Textbook): Introductory Statistics for\nPsychology Students. https://doi.org/10.17605/OSF.IO/JZE52\n\nAll resources are released under a creative commons licence CC BY-SA\n4.0. Click the link to read more about the license, or read more below\nin the license section.\n:::\n\n\n\n\n\n\n\n\n\n# DataSkills 00: Descriptive Statistics\n\nThe purpose of this lab is to show you how to compute basic descriptive\nstatistics, including measures of central tendency (mean, mode, median)\nand variation (range, variance, standard deviation).\n\n## General Goals\n\n1.  Compute measures of central tendency using software\n2.  Compute measures of variation using software\n3.  Ask some questions of a data set using descriptive statistics\n\n### Important info\n\nWe will be using data from the gapminder project. You can download a\nsmall snippet of the data in .csv format from this link (note this\ndataset was copied from the gapminder library for R)\n<a href=\"https://raw.githubusercontent.com/littlemonkeylab/introrm/master/data/gapminder.csv\" download>gapminder.csv</a>.\nIf you are using R, then you can install the gapminder package. This\nmethod is described later in the R section.\n\n## R\n\n### Descriptives basics in R\n\nWe learned in lecture and from the textbook that data we want to use ask\nand answer questions often comes with loads of numbers. Too many numbers\nto look at all at once. That's one reason we use descriptive statistics.\nTo reduce the big set of numbers to one or two summary numbers that tell\nuse something about all of the numbers. R can produce descriptive\nstatistics for you in many ways. There are base functions for most of\nthe ones that you want. We'll go over some R basics for descriptive\nstatistics, and then use our new found skills to ask some questions\nabout real data.\n\n#### Making numbers in R\n\nIn order to do descriptive statistics we need to put some numbers in a\nvariable. You can also do this using the `c()` command, which stands for\ncombine\n\n```{webr-r}\nmy_numbers <- c(1,2,3,4)\nprint(my_numbers)\n```\n\nThere a few other handy ways to make numbers. We can use `seq()` to make\na sequence. Here's making the numbers from 1 to 100\n\n```{webr-r}\none_to_one_hundred <- seq(1,100,1)\nprint(one_to_one_hundred)\n```\n\nWe can repeat things, using rep. Here's making 10 5s, and 25 1s:\n\n```{webr-r}\nrep(10,5)\nrep(1,25)\nall_together_now <- c(rep(10,5),rep(1,25)) \nprint(all_together_now)\n```\n\n#### Sum\n\nLet's play with the number 1 to 100. First, let's use the `sum()`\nfunction to add them up\n\n```{webr-r}\none_to_one_hundred <- seq(1,100,1)\nsum(one_to_one_hundred)\n```\n\n#### Length\n\nWe put 100 numbers into the variable `one_to_one_hundred`. We know how\nmany numbers there are in there. How can we get R to tell us? We use\n`length()` for that.\n\n```{webr-r}\nlength(one_to_one_hundred)\n```\n\n### Central Tendency\n\n#### Mean\n\nRemember the mean of some numbers is their sum, divided by the number of\nnumbers. We can compute the mean like this:\n\n```{webr-r}\nsum(one_to_one_hundred)/length(one_to_one_hundred)\n```\n\nOr, we could just use the `mean()` function like this:\n\n```{webr-r}\nmean(one_to_one_hundred)\n```\n\n#### Median\n\nThe median is the number in the exact middle of the numbers ordered from\nsmallest to largest. If there are an even number of numbers (no number\nin the middle), then we take the number in between the two (decimal .5).\nUse the `median` function. There's only 3 numbers here. The middle one\nis 2, that should be the median\n\n```{webr-r}\nmedian(c(1,2,3))\n```\n\n#### Mode\n\nR does not a base function for the Mode. You would have to write one for\nyourself. Here is an example of writing your own mode function, and then\nusing it. Note I searched how to do this on Google, and am using the\nmode defined by [this answer on stack\noverflow](https://stackoverflow.com/questions/2547402/is-there-a-built-in-function-for-finding-the-mode)\n\nRemember, the mode is the most frequently occurring number in the set.\nBelow 1 occurs the most, so the mode will be one.\n\n```{webr-r}\n\nmy_mode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\nmy_mode(c(1,1,1,1,1,1,1,2,3,4))\n\n\n```\n\n### Variation\n\nWe often want to know how variable the numbers are. We are going to look\nat descriptive statistics to describe this such as the **range**,\n**variance**, the **standard deviation**, and a few others.\n\nFirst, let's remind ourselves what variation looks like (it's when the\nnumbers are different). We will sample 100 numbers from a normal\ndistribution (don't worry about this yet), with a mean of 10, and a\nstandard deviation of 5, and then make a histogram so we can see the\nvariation around 10..\n\n```{webr-r}\nsample_numbers <- rnorm(100,10,5)\nhist(sample_numbers)\n```\n\n#### range\n\nThe range is the minimum and maximum values in the set, we use the\n`range` function.\n\n```{webr-r}\nrange(sample_numbers)\n```\n\n#### var = variance\n\nWe can find the sample variance using `var`. Note, divides by (n-1)\n\n```{webr-r}\nvar(sample_numbers)\n\n```\n\n#### sd = standard deviation\n\nWe find the sample standard deviation us SD. Note, divides by (n-1)\n\n```{webr-r}\nsd(sample_numbers)\n```\n\nRemember that the standard deviation is just the square root of the\nvariance, see:\n\n```{webr-r}\nsqrt(var(sample_numbers))\n```\n\n#### All Descriptives\n\nLet's put all of the descriptives and other functions so far in one\nplace:\n\n```{webr-r}\n# Calculate and print descriptive statistics with labels\ncat(\"Sum:\", sum(sample_numbers), \"\\n\")\ncat(\"Length (Number of Observations):\", length(sample_numbers), \"\\n\")\ncat(\"Mean:\", mean(sample_numbers), \"\\n\")\ncat(\"Median:\", median(sample_numbers), \"\\n\")\ncat(\"Mode:\", my_mode(sample_numbers), \"\\n\")\ncat(\"Range:\", range(sample_numbers), \"\\n\")\ncat(\"Variance:\", var(sample_numbers), \"\\n\")\ncat(\"Standard Deviation:\", sd(sample_numbers), \"\\n\")\n\nmy_mode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\n```\n\n### Descriptives by conditions\n\nSometimes you will have a single variable with some numbers, and you can\nuse the above functions to find the descriptives for that variable.\nOther times (most often in this course), you will have a big data frame\nof numbers, with different numbers in different conditions. You will\nwant to find descriptive statistics for each the sets of numbers inside\neach of the conditions. Fortunately, this is where R really shines, it\ndoes it all for you in one go.\n\nLet's illustrate the problem. Here I make a date frame with 10 numbers\nin each condition. There are 10 conditions, each labelled, A, B, C, D,\nE, F, G, H, I, J.\n\n```{webr-r}\nscores <- rnorm(100,10,5)\nconditions <- rep(c(\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\"), each =10)\nmy_df <- data.frame(conditions,scores)\nmy_df\n```\n\nIf you look at the `my_df` data frame, you will see it has 100 rows,\nthere are 10 rows for each condition with a label in the `conditions`\ncolumn, and 10 scores for each condition in the `scores` column. What if\nyou wanted to know the mean of the scores in each condition? You would\nwant to find 10 means.\n\nThe slow way to do it would be like this:\n\n```{webr-r}\nmean(my_df[my_df$conditions==\"A\",]$scores)\nmean(my_df[my_df$conditions==\"B\",]$scores)\nmean(my_df[my_df$conditions==\"C\",]$scores)\n# and then keep going\n```\n\nNobody wants to do that! Not, me I stopped doing it that way, you should\nto.\n\n#### group_by and summarise\n\nWe can easily do everything all at once using the `group_by` and\n`summarise` function from the `dplyr` package. Just watch\n\n```{webr-r}\nlibrary(dplyr)\n\nmy_df %>%\n  group_by(conditions) %>%\n  summarise(means = mean(scores))\n\n```\n\nA couple things now. First, the print out of this was ugly. Let's fix\nthat. we put the results of our code into a new variable, then we use\n`knitr::kable` to print it out nicely when we `knit` the document\n\n```{webr-r}\n\nsummary_df <- my_df %>%\n               group_by(conditions) %>%\n               summarise(means = mean(scores))\n\nknitr::kable(summary_df)\n\n```\n\n#### multiple descriptives\n\nThe best thing about the `dplyr` method, is that we can add more than\none function, and we'll get more than one summary returned, all in a\nnice format, let's add the standard deviation:\n\n```{webr-r}\n\nsummary_df <- my_df %>%\n               group_by(conditions) %>%\n               summarise(means = mean(scores),\n                         sds = sd(scores))\n\nknitr::kable(summary_df)\n\n```\n\nWe'll add the min and the max too:\n\n```{webr-r}\n\nsummary_df <- my_df %>%\n               group_by(conditions) %>%\n               summarise(means = mean(scores),\n                         sds = sd(scores),\n                         min = min(scores),\n                         max = max(scores))\n\nknitr::kable(summary_df)\n\n```\n\n### Describing gapminder\n\nNow that we know how to get descriptive statistics from R, we cam do\nthis will some real data. Let's quickly ask a few question about the\ngapminder data.\n\n```{webr-r}\nlibrary(gapminder)\ngapminder_df <- gapminder\nhead(gapminder_df)\n```\n\nNote: The above code will only work if you have installed the gapminder\npackage. Make sure you are connected to the internet, then choose the\nPackages tab from the bottom right panel, and choose install. Thens\nsearch for gapminder, choose it, and install it.\n\n#### What are some descriptive for Life expectancy by continent?\n\nCopy the code from the last part of descriptives using `dplyr`, then\nchange the names like this:\n\n```{webr-r}\n\nsummary_df <- gapminder_df %>%\n               group_by(continent) %>%\n               summarise(means = mean(lifeExp),\n                         sds = sd(lifeExp),\n                         min = min(lifeExp),\n                         max = max(lifeExp))\n\nknitr::kable(summary_df)\n\n```\n\n### Generalization Exercise\n\n(1 point - Pass/Fail)\n\nComplete the generalization exercise described in your R Markdown\ndocument for this lab.\n\n1.  What is the mean, standard deviation, minimum and maximum life\n    expectancy for all the gapminder data (across all the years and\n    countries). Hint: do not use `group_by`\n\n2.  What is the mean, standard deviation, minimum and maximum life\n    expectancy for all of the continents in 2007, the most recent year\n    in the dataset. Hint: add another pipe using\n    `filter(year==2007) %>%`\n\n### Writing assignment\n\n(2 points - Graded)\n\nComplete the writing assignment described in your R Markdown document\nfor this lab. When you have finished everything. Knit the document and\nhand in your stuff (you can submit your .RMD file to blackboard if it\ndoes not knit.)\n\nYour writing assignment is to answer these questions in full sentences\nusing simple plain langauge:\n\n1.  Define the mode.\n2.  Explain what would need to happen in order for a set of numbers to\n    have two modes\n3.  Define the median\n4.  Define the mean\n5.  Define the range\n6.  When calculating the standard deviation, explain what the difference\n    scores represent\n7.  Explain why the difference scores are squared when calculating the\n    standard deviation\n8.  If one set of numbers had a standard deviation of 5, and another had\n    a standard deviation of 10, which set of numbers would have greater\n    variance, explain why.\n\n**Rubric**\n\nGeneral grading.\n\n-   You will receive 0 points for missing answers (say, if you do not\n    answer question c, then you will receive 0 out .25 points for that\n    question)\n-   You must write in complete sentences. Point form sentences will be\n    given 0 points.\n-   Completely incorrect answers will receive 0 points.\n-   If your answer is generally correct but very difficult to understand\n    and unclear you may receive half points for the question\n\n## SPSS\n\nIn this lab, we will use SPSS to calculate a variety of descriptive\nstatistics. SPSS allows us to specify which statistics we would like\ncalculated and produce them all in one output table. Here, we will learn\nto:\n\n1.  Calculate descriptive statistics\n2.  Graph data using a histogram\n3.  Editing graphs\n\nLet's begin with a short data set {x= 1, 1, 4, 1, 2, 5, 7}\n\nSuppose we want to calculate the measures of central tendency (mean,\nmedian, and mode) as well as variability (range, standard deviation, and\nvariance). First, we will have to enter our data into the SPSS\nspreadsheet. There are 7 measurements, so we will need 7 rows of data (I\nhave also changed the name of this variable in Variable View to `x`:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.11.png){width=75%}\n:::\n:::\n\n\n\n\n### Calculating Descriptive Statistics\n\n------------------------------------------------------------------------\n\nFrom here, go to the top menu and choose [Analyze]{style=\"color:blue\"},\nthen [Descriptive Statistics]{style=\"color:blue\"} and then\n[Frequencies]{style=\"color:blue\"}:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.12.png){width=75%}\n:::\n:::\n\n\n\n\nA new window will ask you to specify for which variables you want\ndescriptives statistics calculated. Use the arrow to move the `x`\nvariable from the left-hand to the right-hand field.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.13.png){width=75%}\n:::\n:::\n\n\n\n\nNow, click the [Statistics]{style=\"color:blue\"} button. This will open a\nnew window containing a list of statistics. You can choose as many as\nyou want to be calculated. We will choose [mean, median mode, range,\nstandard deviation, and variance]{style=\"color:blue\"}.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.14.png){width=75%}\n:::\n:::\n\n\n\n\nThen click [Continue]{style=\"color:blue\"}, and then\n[OK]{style=\"color:blue\"}. SPSS will produce a set of two output tables:\none containing the descriptive statistics we have chosen, and the other\na frequency table--a list of all the possible values in our data set and\ntheir corresponding frequencies.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.15.png){width=75%}\n:::\n:::\n\n\n\n\n### Descriptive Statistics and Histograms\n\n------------------------------------------------------------------------\n\nNow let's use a real dataset to calculate the same measures of central\ntendency and variability as in the last example, but with the addition\nof a histogram to visualize a distribution to relate back to the\ndescriptive statistics.\n[Here](https://github.com/CrumpLab/statisticsLab/blob/master/data/spssdata/life_expectancy.sav)\nis a link to the life expectancy dataset we used for our graphing\ntutorial. It is named life_expectancy.sav.\n\nSuppose we wanted to know about life expectancy (around the world) in\n2018. This will include calculating descriptive statistics, as well as\ngraphing a histogram to examine the distribution of our data. SPSS often\nhas neat shortcuts to graph data within other menu options. For example,\nin the process of asking SPSS to produce a table of descriptive\nstatistics, we can also add a histogram to the output without having to\ngo to the Graphs menu.\n\nFirst, we go to [Analyze]{style=\"color:blue\"}, then [Descriptive\nStatistics]{style=\"color:blue\"}, then [Frequencies]{style=\"color:blue\"}.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.16.png){width=75%}\n:::\n:::\n\n\n\n\nA window will appear asking us to indicate which variable to use. We\nwill scroll all the way down in the list of variables on the left,\nchoose `2018 [V220]`, and then move it into the field on the right using\nthe arrow.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.17.png){width=75%}\n:::\n:::\n\n\n\n\nAs in the previous example, we will click the\n[Statistics]{style=\"color:blue\"} button next, and choose our measures of\ncentral tendency [(mean, median, mode)]{style=\"color:blue\"} as well as\nvariability [(range, standard deviation, variance)]{style=\"color:blue\"}.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.18.png){width=75%}\n:::\n:::\n\n\n\n\nOnce we click continue, we are back to the previous window. Here, we can\nconveniently ask SPSS to insert a histogram. Let's click on the\n[Charts]{style=\"color:blue\"} button:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.19.png){width=75%}\n:::\n:::\n\n\n\n\nThis will open a new window that asks us to specify the type of chart we\nwould like. Let's select [Histogram]{style=\"color:blue\"}, and check off\n[Show normal curve on histogram]{style=\"color:blue\"}:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.20.png){width=75%}\n:::\n:::\n\n\n\n\nClick [Continue]{style=\"color:blue\"}, and then [OK]{style=\"color:blue\"}.\n\nSPSS will produce a table of the requested descriptive statistics, a\nfrequency table (we will ignore this for now because it is long and not\nrelevant to this exercise), and finally, a histogram showing the\ndistribution of life expectancy (in years) with a normal distribution\nsuperimposed for comparison.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.21.png){width=75%}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.22.png){width=75%}\n:::\n:::\n\n\n\n\nSomething to think about: What do the mean, median, and mode indicate\nabout the shape of the distribution? Is it confirmed when we look at the\nhistogram? How does the shape of this distribution compare to the\nsymmetrical normal distribution which is superimposed over it?\n\n### Editing graphs\n\n------------------------------------------------------------------------\n\nFor future reference, we will take this opportunity to make edits to the\nappearance of this graph. It is helpful to know how to manipulate not\njust the superficial, cosmetic appearance of data visualizations, but\nalso the components of graphs that communicate important information.\nOne feature to consider is the scale of our axes.\n\nTo modify the scale in a graph, first [double-click]{style=\"color:blue\"}\non the graph itself in the output window. A Chart Editor should pop up.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.23.png){width=75%}\n:::\n:::\n\n\n\n\nNow, hover your mouse over one of the values on the x-axis, and click\ndown once. You will see all the x-axis values suddenly highlight:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.24.png){width=75%}\n:::\n:::\n\n\n\n\nNow that you know how to select the entire axis, [double\nclick]{style=\"color:blue\"} on it. A properties window will pop up:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.25.png){width=75%}\n:::\n:::\n\n\n\n\nNotice that in the default tab, you can change the fill color of\ncomponents of your graph. For now, we will select the\n[Scale]{style=\"color:blue\"} tab instead:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.26.png){width=75%}\n:::\n:::\n\n\n\n\nNotice in this tab, we can change the minimum, maximum, and increments\nof our scale. Lets change the major increment to 5:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.27.png){width=75%}\n:::\n:::\n\n\n\n\nClick [Apply]{style=\"color:blue\"}. Then [Close]{style=\"color:blue\"}.\nNow, close your Chart Editor window by simply\n[x]{style=\"color:blue\"}-ing it out. The SPSS output window will now\ncontain your edited graph:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/2.4.28.png){width=75%}\n:::\n:::\n\n\n\n\n### Practice Problems\n\n------------------------------------------------------------------------\n\n1.  Using the life expectancy data set, produce a table of output\n    showing the descriptive statistics (measures of central tendency and\n    variability) for both years 1800 and 1934 (during the Great\n    Depression).\n\n2.  Plot histograms of life expectancy for both years. How are these\n    distributions different? (Hint: Plot these on the same axes so that\n    they are comparable).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}